# Rate limiting / DDOS protection.
limit_req_zone $binary_remote_addr zone=sprintreq:10m rate=5r/s;
limit_conn_zone $binary_remote_addr zone=sprintconn:10m;

server {

    # Listen for incoming connections.
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Set server name and root location.
    server_name www.sidelinesprint.com;
    root /var/www/ghost/system/nginx-root; # Used for acme.sh SSL verification (https://acme.sh)

    # SSL configuration parameters.
    ssl_certificate /etc/letsencrypt/www.sidelinesprint.com/fullchain.cer;
    ssl_certificate_key /etc/letsencrypt/www.sidelinesprint.com/www.sidelinesprint.com.key;
    include /etc/nginx/snippets/ssl-params.conf;

    # Limit requests.
    client_max_body_size 20m;
    client_body_timeout 20;

    # Set encoding.
    charset utf-8;
    source_charset utf-8;
    charset_types text/plain
        text/xml
        text/js
        text/css
        text/javascript
        application/javascript
        application/x-javascript
        image/svg+xml;

    # Set compression.
    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript;

    # Hide nginx info and set server name.
    server_tokens off;
    more_set_headers 'Server: Sideline Sprint';

    # Configure cache policy.
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico)$ {
        add_header Cache-Control "public, no-transform, immutable, max-age=31536000";
        add_header X-Content-Type-Options nosniff;
        expires 365d;
    }

    # Location for the main signup website.
    location / {
        try_files $uri $uri.html $uri/ @extensionless-php;
        index index.html index.htm index.php;
        location ~ \.php$ {
            add_header Cache-Control "public, no-transform, immutable, max-age=180";
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
            fastcgi_intercept_errors on;
        }
    }

    # Remove extensions from php files.
    location @extensionless-php {
        rewrite ^(.*)$ $1.php last;
    }

    # Redirect 404/500 errors to homepage.
    error_page 403 = @myownredirect;
    error_page 404 = @myownredirect;
    error_page 500 = @myownredirect;
    location @myownredirect {
        return 302 /;
    }

}
